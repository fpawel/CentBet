{
"version": 3,
"sourceRoot": "FSharpSource",
"sources": ["WebSharper.Control/Disposable.fs", "WebSharper.Control/Event.fs", "WebSharper.Control/EventModule.fs", "WebSharper.Control/FSharpEvent.fs", "WebSharper.Control/HotStream.fs", "WebSharper.Control/MailboxProcessor.fs", "WebSharper.Control/Observable.fs", "WebSharper.Control/ObservableModule.fs", "WebSharper.Control/Observer.fs"],
"sourcesContent": ["// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nmodule internal Disposable =\n    open System\n    open WebSharper\n    open WebSharper.JavaScript\n\n    [<JavaScript>]\n    let Of (dispose: unit -> unit) : IDisposable =\n        New [\"Dispose\" => dispose]\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nmodule internal Event =\n    open System\n    open WebSharper\n    open WebSharper.JavaScript\n\n    type Event<'T> = private { Handlers : ResizeArray<Handler<'T>> } with\n\n        [<JavaScript>]\n        member this.Trigger(x: 'T) =\n            for h in this.Handlers.ToArray() do\n                (As<'T -> unit> h) x\n\n        [<JavaScript>]\n        member this.AddHandler(h: Handler<'T>) =\n            this.Handlers.Add h\n\n        [<JavaScript>]\n        member this.RemoveHandler(h: Handler<'T>) =\n            this.Handlers\n            |> Seq.tryFindIndex ((=) h)\n            |> Option.iter this.Handlers.RemoveAt\n\n        [<JavaScript>]\n        member this.Subscribe(observer: IObserver<'T>) =\n            let h = new Handler<'T>(fun _ x -> observer.OnNext x)\n            this.AddHandler h\n            Disposable.Of (fun () -> this.RemoveHandler h)\n\n        interface IDisposable with\n            member this.Dispose() = X<unit>\n\n        interface IObservable<'T> with\n            member this.Subscribe observer = X<IDisposable>\n\n        interface IDelegateEvent<Handler<'T>> with\n            member this.AddHandler x = X<unit>\n            member this.RemoveHandler x = X<unit>\n\n        interface IEvent<'T>\n\n    [<Inline>]\n    [<JavaScript>]\n    let New () = { Handlers = ResizeArray() }\n\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nopen System\nopen WebSharper\n\n[<Proxy \"Microsoft.FSharp.Control.EventModule, \\\n    FSharp.Core, Culture=neutral, \\\n    PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private EventModule =\n\n    [<Inline>]\n    [<JavaScript>]\n    let Add f (e: IEvent<_,_>) = e.Add f\n\n    [<JavaScript>]\n    let Choose c (e: IEvent<_,_>) : IEvent<_> =\n        // let r = Event.New ()\n        let r = Event<_>()\n        e.Add (fun x ->\n            match c x with\n            | Some y    -> r.Trigger y\n            | None      -> ())\n        r.Publish :> _\n\n    [<JavaScript>]\n    let Filter ok (e: IEvent<_,_>) : IEvent<_> =\n        let r = Event.New ()\n        e.Add (fun x -> if ok x then r.Trigger x)\n        r :> _\n\n    [<JavaScript>]\n    let Map f (e: IEvent<_,_>) : IEvent<_> =\n        let r = Event.New ()\n        e.Add (fun x -> r.Trigger (f x))\n        r :> _\n\n    [<JavaScript>]\n    let Merge<'D1,'T,'D2 when 'D1 :> Delegate\n                          and 'D1 :  delegate<'T,unit>\n                          and 'D2 :> Delegate\n                          and 'D2 :  delegate<'T,unit>>\n            (e1: IEvent<'D1,'T>) (e2: IEvent<'D2,'T>) : IEvent<_> =\n        let r = Event.New ()\n        e1.Add r.Trigger\n        e2.Add r.Trigger\n        r :> _\n\n    [<JavaScript>]\n    let Pairwise (e: IEvent<_,_>) : IEvent<_> =\n        let buf = ref None\n        let ev  = Event.New ()\n        e.Add (fun x ->\n            match buf.Value with\n            | None ->\n                buf := Some x\n            | Some old ->\n                buf := Some x\n                ev.Trigger(old, x))\n        ev :> _\n\n    [<JavaScript>]\n    let Partition f e =\n        (Event.filter f e, Event.filter (f >> not) e)\n\n    [<JavaScript>]\n    let Scan fold seed e =\n        let state = ref seed\n        let f value =\n            state := fold !state value\n            !state\n        Event.map f e\n\n    [<JavaScript>]\n    let Split (f: 'T -> Choice<'U1,'U2>) (e: IEvent<'Del,'T>) =\n        (\n            e |> Event.choose (fun x ->\n                match f x with\n                | Core.Choice1Of2 x -> Some x\n                | _                 -> None),\n            e |> Event.choose (fun x ->\n                match f x with\n                | Core.Choice2Of2 x -> Some x\n                | _                 -> None)\n        )\n\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nopen WebSharper\n\n[<Proxy(typeof<Event<_>>)>]\ntype private FSharpEvent<'T> [<JavaScript>] () =\n    let event = Event.New ()\n\n    [<Inline>]\n    [<JavaScript>]\n    member this.Trigger(x: 'T) = event.Trigger x\n\n    [<JavaScript>]\n    member this.Publish with [<Inline>] get () = event :> IEvent<_>\n\n[<Proxy(typeof<IDelegateEvent<_>>)>]\ntype private IDelegateEventProxy<'D> =\n    abstract AddHandler : 'D -> unit\n    abstract RemoveHandler : 'D -> unit\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nmodule internal HotStream =\n    open System\n\n    /// Implementation for \"hot stream\".\n    /// Subscribers to hot streams will only observe the latest\n    /// and future values.\n    type HotStream<'T> =\n        internal\n            {\n                Latest  : ref<option<'T>>\n                Event   : Event<'T>\n            }\n        interface IObservable<'T> with\n            [<ReflectedDefinition>]\n            member this.Subscribe(o) =\n                if this.Latest.Value.IsSome then\n                    o.OnNext this.Latest.Value.Value\n                let disp =\n                    this.Event.Publish.Subscribe(fun v ->\n                        o.OnNext(v)\n                    )\n                disp\n\n        [<ReflectedDefinition>]\n        member this.Trigger(v) =\n            this.Latest := Some v\n            this.Event.Trigger v\n\n        [<ReflectedDefinition>]\n        static member New<'U>() : HotStream<'U> =\n            {\n                Latest = ref None\n                Event = Event<_>()\n            }\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nopen System.Collections.Generic\nopen WebSharper\nopen WebSharper.JavaScript\nopen System.Threading\n\n[<Proxy(typeof<AsyncReplyChannel<_>>)>]\ntype private ChannelProxy<'T> =\n    [<Inline \"$this($res)\">]\n    member this.Reply(res: 'T) = X<unit>\n\n[<JavaScript>]\n[<Proxy(typeof<MailboxProcessor<_>>)>]\n[<Name \"MailboxProcessor\">]\ntype private MailboxProcessorProxy<'T> (initial, ?token: CancellationToken) =\n    let mutable started = false\n    let errorEvent = Event<exn>()\n    let mailbox = LinkedList<'T>()\n    let mutable savedCont = None\n\n    let startAsync a =\n        Async.Start(a, ?cancellationToken = token)\n\n    let resume() =\n        match savedCont with\n        | None -> ()\n        | Some c ->\n            savedCont <- None\n            c |> startAsync\n\n    do  match token with\n        | Some ct -> \n            ct.Register(fun () -> resume()) |> ignore\n        | None -> ()\n\n    let dequeue() =\n        let f = mailbox.First.Value\n        mailbox.RemoveFirst()\n        f\n\n    [<Inline>]\n    member this.Error = errorEvent.Publish\n    [<Inline>]\n    member this.add_Error handler = this.Error.AddHandler handler\n    [<Inline>]\n    member this.remove_Error handler = this.Error.RemoveHandler handler\n\n    member val DefaultTimeout = -1 with get, set    \n\n    member this.Start() =\n        if started then\n            failwith \"The MailboxProcessor has already been started.\"\n        else\n            started <- true\n            async {\n                try do! initial (As<MailboxProcessor<'T>> this)\n                with err -> errorEvent.Trigger err\n            } |> startAsync\n\n    static member Start(initial, ?token: CancellationToken) =\n        let mb = new MailboxProcessor<'T>(initial, ?cancellationToken = token)\n        mb.Start()\n        mb\n\n    [<Inline>]\n    member this.Post(msg: 'T) =\n        mailbox.AddLast msg |> ignore\n        resume()\n\n    member this.TryReceive(?timeout: int) =        \n        let timeout = defaultArg timeout this.DefaultTimeout\n        Async.FromContinuations <| fun (ok, _, _) ->\n            if mailbox.First = null then\n                if timeout < 0 then\n                    savedCont <- Some <| async { dequeue() |> Some |> ok }\n                else  \n                    let waiting = ref true\n                    let pending = \n                        JS.SetTimeout(fun () ->\n                            if !waiting then\n                                waiting := false\n                                savedCont <- None\n                                ok None\n                        ) timeout \n                    savedCont <- Some <| async { \n                        if !waiting then do\n                            waiting := false  \n                            JS.ClearTimeout pending\n                            dequeue() |> Some |> ok \n                    }\n            else dequeue() |> Some |> ok\n\n    member this.Receive(?timeout: int) =\n        async {\n            let! x = this.TryReceive(?timeout = timeout)\n            return\n                match x with\n                | None -> raise (System.TimeoutException())\n                | Some x -> x\n        }\n                              \n    member this.CurrentQueueLength = mailbox.Count\n\n    member this.PostAndTryAsyncReply(msgf: AsyncReplyChannel<'R> -> 'T, ?timeout: int) : Async<'R option> =\n        let timeout = defaultArg timeout this.DefaultTimeout\n        Async.FromContinuations <| fun (ok, _, _) ->\n            if timeout < 0 then\n                As (Some >> ok) |> msgf |> this.Post\n            else\n                let waiting = ref true\n                As (fun res ->\n                    if !waiting then\n                        waiting := false\n                        ok (Some res)\n                ) |> msgf |> this.Post\n                JS.SetTimeout (fun () ->\n                    if !waiting then\n                        waiting := false\n                        ok None        \n                ) timeout |> ignore               \n\n    member this.PostAndAsyncReply(msgf: AsyncReplyChannel<'R> -> 'T, ?timeout: int) : Async<'R> =\n        async {\n            let! x = this.PostAndTryAsyncReply(msgf, ?timeout = timeout)\n            return\n                match x with\n                | None -> raise (System.TimeoutException())\n                | Some x -> x\n        }\n\n    member this.TryScan(scanner, ?timeout: int) =\n        let timeout = defaultArg timeout this.DefaultTimeout\n        async {\n            let scanInbox() =\n                let mutable m = mailbox.First\n                let mutable found = None\n                while m <> null do \n                    match scanner m.Value with\n                    | None ->\n                        m <- m.Next\n                    | _ as a ->\n                        mailbox.Remove m\n                        m <- null\n                        found <- a\n                found\n            match scanInbox() with\n            | Some found -> \n                let! res = found\n                return Some res\n            | _ -> return! Async.FromContinuations <| fun (ok, _, _) -> \n                if timeout < 0 then\n                    let rec scanNext() =\n                        savedCont <- Some <| async {\n                            match scanner mailbox.First.Value with\n                            | None -> scanNext()\n                            | Some c ->\n                                mailbox.RemoveFirst()\n                                let! res = c\n                                ok (Some res)\n                        }\n                    scanNext()\n                else\n                    let waiting = ref true\n                    let pending = \n                        JS.SetTimeout(fun () ->\n                            if !waiting then\n                                waiting := false\n                                savedCont <- None\n                                ok None\n                        ) timeout\n                    let rec scanNext() =\n                        savedCont <- Some <| async {\n                            match scanner mailbox.First.Value with\n                            | None -> scanNext()\n                            | Some c ->\n                                mailbox.RemoveFirst()\n                                let! res = c\n                                if !waiting then do\n                                    waiting := false\n                                    JS.ClearTimeout pending\n                                    ok (Some res)\n                        }\n                    scanNext()\n        }\n        \n    member this.Scan(scanner, ?timeout: int) =\n        async {\n            let! x = this.TryScan(scanner, ?timeout = timeout)\n            return\n                match x with\n                | None -> raise (System.TimeoutException())\n                | Some x -> x\n        }\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nmodule internal WebSharper.Control.Observable\n\nopen System\nopen WebSharper\n\ntype private Observable<'T> =\n    internal {\n        Subscribe : IObserver<'T> -> IDisposable\n    }\n\n    interface IObservable<'T> with\n\n        [<JavaScript>]\n        member this.Subscribe observer =\n            this.Subscribe observer\n\n[<JavaScript>]\nlet New f : IObservable<_> = upcast { Subscribe = f }\n\n[<JavaScript>]\nlet Of (f: ('T -> unit) -> (unit -> unit)) : IObservable<_> =\n    New (fun o -> Disposable.Of (f (fun x -> o.OnNext x)))\n\n[<JavaScript>]\nlet Return<'T> (x: 'T) : IObservable<'T> =\n    let f (o : IObserver<'T>) =\n        o.OnNext x\n        o.OnCompleted ()\n        Disposable.Of ignore\n    New f\n\n[<JavaScript>]\nlet Never<'T> () : IObservable<'T> =\n    New(fun _ ->\n        Disposable.Of ignore\n    )\n\n[<JavaScript>]\nlet Protect f succeed fail =\n    match (try Choice1Of2 (f ()) with e -> Choice2Of2 e) with\n    | Choice1Of2 x -> (succeed x)\n    | Choice2Of2 e -> (fail e)\n\n[<JavaScript>]\nlet Map (f: 'T -> 'U) (io: IObservable<'T>) : IObservable<'U> =\n    New <| fun o1 ->\n        let on v = Protect (fun () -> f v) o1.OnNext o1.OnError\n        io.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)\n\n\n[<JavaScript>]\nlet Filter (f: 'T -> bool) (io: IObservable<'T>) : IObservable<'T> =\n    New <| fun o1 ->\n        let on v = \n            Protect (fun () -> if f v then Some v else None)\n                (Option.iter o1.OnNext) o1.OnError\n        io.Subscribe <|  Observer.New(on, o1.OnError, o1.OnCompleted)\n\n[<JavaScript>]\nlet Choose  (f: 'T -> option<'U>) (io: IObservable<'T>) : IObservable<'U> =\n    New <| fun o1 ->\n        let on v = Protect (fun () -> f v) (Option.iter o1.OnNext) o1.OnError\n        io.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)\n\n[<JavaScript>]\nlet Drop count (io: IObservable<'T>) : IObservable<'T> =\n    New <| fun o1 ->\n        let index = ref 0\n        let on v =\n            incr index\n            if index.Value > count then\n                o1.OnNext v\n        io.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)\n\n[<JavaScript>]\nlet Merge (io1: IObservable<'T>) (io2: IObservable<'T>) : IObservable<'T> =\n    New <| fun o ->\n        let completed1 = ref false\n        let completed2 = ref false\n        let disp1 =\n            Observer.New(o.OnNext, ignore, fun () ->\n                completed1 := true\n                if completed1.Value && completed2.Value then\n                    o.OnCompleted ()\n            )\n            |> io1.Subscribe\n        let disp2 =\n            Observer.New(o.OnNext, ignore, fun () ->\n                completed2 := true\n                if completed1.Value && completed2.Value then\n                    o.OnCompleted ()\n            )\n            |> io2.Subscribe\n        Disposable.Of (fun () -> disp1.Dispose(); disp2.Dispose())\n\n[<JavaScript>]\nlet Concat (io1: IObservable<'T>) (io2: IObservable<'T>) =\n    New <| fun o ->\n        let innerDisp = ref None\n        let outerDisp =\n            io1.Subscribe(\n                Observer.New(o.OnNext, ignore, fun () ->\n                    innerDisp := Some <| io2.Subscribe(o)\n                )\n            )\n        Disposable.Of <| fun () ->\n            if innerDisp.Value.IsSome then\n                innerDisp.Value.Value.Dispose ()\n            outerDisp.Dispose()\n\n\n[<JavaScript>]\nlet Range (start: int , count: int) : IObservable<int> =\n    New <| fun o ->\n        for i = start to start + count do\n            o.OnNext i\n        Disposable.Of ignore\n\n\n[<JavaScript>]\nlet CombineLatest   (io1 : IObservable<'T>)\n                    (io2: IObservable<'U>)\n                    (f: 'T -> 'U -> 'S) : IObservable<'S> =\n    New <| fun o ->\n        let lv1 = ref None\n        let lv2 = ref None\n        let update () =\n            match !lv1, !lv2 with\n            | Some v1, Some v2  ->\n                Protect (fun () -> f v1 v2) o.OnNext o.OnError\n            | _                 ->\n                ()\n        let o1 =\n            let onNext x =\n                lv1 := Some x\n                update ()\n            Observer.New(onNext, ignore, ignore)\n        let o2 =\n            let onNext y =\n                lv2 := Some y\n                update ()\n            Observer.New(onNext, ignore, ignore)\n        let d1 = io1.Subscribe(o1)\n        let d2 = io2.Subscribe(o2)\n        Disposable.Of (fun () -> d1.Dispose() ; d2.Dispose())\n\n[<JavaScript>]\nlet Switch (io: IObservable<IObservable<'T>>) : IObservable<'T> =\n    New (fun o ->\n        let disp =\n            let index = ref 0\n            let disp : option<IDisposable> ref = ref None\n\n            // Subscribe to outer stream\n            io.Subscribe(fun (o1 : IObservable<'T>) ->\n                // Update counter\n                incr index\n\n                // Dispose old observer\n                if disp.Value.IsSome then\n                    disp.Value.Value.Dispose ()\n\n                let currentIndex = index.Value\n                let d =\n                    o1.Subscribe (fun v ->\n                        if currentIndex = index.Value then\n                            o.OnNext(v)\n                    ) |> Some\n                // Update dispose\n                disp := d\n            )\n        disp\n    )\n\n[<JavaScript>]\nlet SelectMany (io: IObservable<IObservable<'T>>) : IObservable<'T> =\n    New (fun o ->\n        let disp = ref ignore\n        // Subscribe to outer stream\n        let d =\n            io.Subscribe(fun (o1 : IObservable<'T>) ->\n                // Subscribe to inner stream\n                let d =\n                    o1.Subscribe (fun v ->\n                        o.OnNext v\n                    )\n                disp := fun () ->\n                    disp.Value ()\n                    d.Dispose ()\n            )\n        Disposable.Of (fun () ->\n            disp.Value ()\n            d.Dispose ()\n        )\n    )\n\n[<JavaScript>]\nlet Aggregate (io: IObservable<'T>) (seed: 'S) (fold: 'S -> 'T -> 'S) =\n    New <| fun o1 ->\n        let state = ref seed\n        let on v = \n            Protect (fun () -> fold !state v) \n                (fun s -> state := s; o1.OnNext s) o1.OnError\n        io.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)  \n\n//    [<JavaScript>]\n//    let CollectLatest (outer: IObservable<IObservable<'T>>) : IObservable<seq<'T>> =\n//        New (fun o ->\n//            let dict = System.Collections.Generic.Dictionary<int, 'T>()\n//            let index = ref 0\n//\n//            // Outer subscription\n//            outer.Subscribe(fun (inner: IObservable<'T>) ->\n//                incr index\n//                let currentIndex = index.Value\n//\n//                // Inner subscription\n//                inner.Subscribe(fun value ->\n//                    dict.[currentIndex] <- value\n//                    seq {for pair in dict do yield pair.Value}\n//                    |> o.OnNext\n//                )|> ignore\n//            )\n//        )\n\n[<JavaScript>]\nlet Sequence (ios: seq<IObservable<'T>>) : IObservable<List<'T>> =\n    let rec sequence (ios: list<IObservable<'T>>) =\n        match ios with\n        | []        ->\n            Return []\n        | x::xs  ->\n            let rest = sequence xs\n            CombineLatest x rest  (fun x y -> x :: y)\n    sequence (List.ofSeq ios)\n\n\n[<Inline>]\n[<JavaScript>]\nlet Heat (io: IObservable<'T>) : IObservable<'T> =\n    let formStream = HotStream.HotStream<_>.New()\n    let disp =\n        io.Subscribe formStream.Trigger\n    formStream :> IObservable<'T>\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nopen System\nopen WebSharper\n\n[<Proxy \"Microsoft.FSharp.Control.ObservableModule, \\\n    FSharp.Core, Culture=neutral, \\\n    PublicKeyToken=b03f5f7f11d50a3a\">]\nmodule private ObservableModule =\n\n    [<JavaScript>]\n    [<Inline>]\n    let Add (f: 'T -> unit) (o: IObservable<'T>) =\n        ignore (o.Subscribe (Observer.Of f))\n\n    [<JavaScript>]\n    [<Inline>]\n    let Choose (c: 'T -> option<'U>) (e: IObservable<'T>) =\n        Observable.Choose c e\n\n    [<JavaScript>]\n    [<Inline>]\n    let Filter (ok: 'T -> bool) (e: IObservable<'T>) : IObservable<'T> =\n        Observable.Filter ok e\n\n    [<JavaScript>]\n    [<Inline>]\n    let Map (f: 'T -> 'U) (e: IObservable<'T>) : IObservable<'U> =\n        Observable.Map f e\n\n    [<JavaScript>]\n    [<Inline>]\n    let Merge (e1: IObservable<'T>) (e2: IObservable<'T>) =\n        Observable.Merge e1 e2\n\n    [<JavaScript>]\n    let Pairwise (e: IObservable<'T>) : IObservable<'T * 'T> =\n        Observable.New <| fun o1 ->\n            let last = ref None\n            let on v =\n                match !last with\n                | None -> ()\n                | Some l -> o1.OnNext(l, v)\n                last := Some v\n            e.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)  \n\n    [<JavaScript>]\n    let Partition (f: 'T -> bool) (e: IObservable<'T>) :\n            IObservable<'T> * IObservable<'T> =\n        (Observable.Filter f e, Observable.filter (f >> not) e)\n\n    [<JavaScript>]\n    let Scan (fold: 'U -> 'T -> 'U) (seed: 'U) (e: IObservable<'T>) : IObservable<'U> =\n        Observable.New <| fun o1 ->\n            let state = ref seed\n            let on v = \n                Observable.Protect (fun () -> fold !state v) \n                    (fun s -> state := s; o1.OnNext s) o1.OnError\n            e.Subscribe <| Observer.New(on, o1.OnError, o1.OnCompleted)  \n\n    [<JavaScript>]\n    let Split (f: 'T -> Core.Choice<'U1,'U2>) (e: IObservable<'T>) :\n            IObservable<'U1> * IObservable<'U2> =\n        let left =\n            e\n            |> Observable.choose (fun x ->\n                match f x with\n                | Core.Choice1Of2 x -> Some x\n                | _ -> None)\n        let right =\n            e\n            |> Observable.choose (fun x ->\n                match f x with\n                | Core.Choice2Of2 x -> Some x\n                | _ -> None)\n        (left, right)\n\n    [<JavaScript>]\n    [<Inline>]\n    let Subscribe (f: 'T -> unit) (e: IObservable<'T>) =\n        e.Subscribe f\n", "// $begin{copyright}\n//\n// This file is part of WebSharper\n//\n// Copyright (c) 2008-2015 IntelliFactory\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you\n// may not use this file except in compliance with the License.  You may\n// obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n// implied.  See the License for the specific language governing\n// permissions and limitations under the License.\n//\n// $end{copyright}\n\nnamespace WebSharper.Control\n\nopen System\nopen WebSharper\n\n[<JavaScript>]\nmodule internal Observer =\n\n    type Message<'T> =\n        | Message of 'T\n        | Error of exn\n        | Completed\n\n    type private Observer<'T> =\n        {\n            onNext : 'T -> unit\n            onError : exn -> unit\n            onCompleted : unit -> unit\n        }\n\n        interface IObserver<'T> with\n            member __.OnNext x = __.onNext x\n            member __.OnError e = __.onError e\n            member __.OnCompleted() = __.onCompleted ()\n\n    let Of f : IObserver<_> =\n        upcast {\n            onNext = fun x -> f x\n            onError = fun x -> raise x\n            onCompleted = fun () -> ()\n        }\n\n    let New (f, e, c) : IObserver<_> =\n        upcast {\n            onNext = f\n            onError = e\n            onCompleted = c\n        }\n"],
"names": ["dispose", "h", "Unchecked", "y", "objectArg", "arg00", "Seq", "predicate", "source", "Option", "action", "option", "observer", "x", "Disposable", "this", "arr", "Arrays", "idx", "FSharpEvent", "Util", "e", "c", "matchValue", "r", "ok", "f", "e1", "e2", "buf", "ev", "old", "EventModule", "value", "seed", "state", "fold", "chooser", "o", "v", "disp", "Concurrency", "msgf", "timeout", "_arg4", "Operators", "TimeoutException", "tupledArg", "waiting", "res", "setTimeout", "_arg3", "scanner", "_arg8", "_arg2", "a", "arg0", "clearTimeout", "pending", "m", "found", "scanInbox", "_arg5", "_arg6", "scanNext", "_arg7", "initial", "token", "T", "ct", "MailboxProcessor", "mb", "Observable", "s", "o1", "Observer", "on", "io", "lv1", "lv2", "v1", "v2", "update", "onNext", "io1", "io2", "o2", "d1", "d2", "innerDisp", "outerDisp", "Ref", "index", "count", "completed1", "completed2", "disp1", "disp2", "fail", "succeed", "start", "i", "d", "ios", "sequence", "xs", "rest", "List", "currentIndex", "last", "l", "left", "right"],
"mappings": "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"
}
